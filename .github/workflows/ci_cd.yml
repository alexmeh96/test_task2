name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        env:
          VK_BOT_TOKEN: 'Token'
          VK_BOT_GROUP_ID: '55555'
          VK_BOT_CODE_ANSWER_SERVER: 'answer_server'
        run: mvn -B package --file pom.xml

      - name: Build and tag image
        run: docker build -t "ghcr.io/alexmeh96/vkbot-app-image:${GITHUB_SHA::8}" .

      - name: Docker login
        run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}

      - name: Publish image
        run: docker push "ghcr.io/alexmeh96/vkbot-app-image:${GITHUB_SHA::8}"


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: set global env
        id: global_env
        run: echo "::set-output name=DOCKER_TAG::${GITHUB_SHA::8}"

      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          SSH_EC2: ${{ secrets.SSH_EC2  }}
          VK_BOT_TOKEN: ${{ secrets.VK_BOT_TOKEN  }}
          VK_BOT_GROUP_ID: ${{ secrets.VK_BOT_GROUP_ID  }}
          VK_BOT_CODE_ANSWER_SERVER: ${{ secrets.VK_BOT_CODE_ANSWER_SERVER  }}
          DOCKER_TAG: ${{ steps.global_env.outputs.DOCKER_TAG }}

        run: |
          echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem ./docker-compose.yml ./default.conf ${SSH_EC2}:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${SSH_EC2} "
            echo "DOCKER_TAG=$DOCKER_TAG" > .env;
            echo "VK_BOT_TOKEN=$VK_BOT_TOKEN" >> .env;
            echo "VK_BOT_GROUP_ID=$VK_BOT_GROUP_ID" >> .env;
            echo "VK_BOT_CODE_ANSWER_SERVER=$VK_BOT_CODE_ANSWER_SERVER" >> .env;
            sudo docker-compose down;
            sudo docker-compose build;
            sudo docker-compose up -d
          "